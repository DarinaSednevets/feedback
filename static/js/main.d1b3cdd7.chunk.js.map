{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","Notification","message","notification","FeedbackOptions","options","onLeaveFeedback","feedbackList","map","option","type","name","onClick","btn","Statistics","good","neutral","bad","total","positivePercentage","style","statisticList","statisticItem","defaultProps","App","state","countFeedbackHandler","event","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","positiveFeedback","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,cAAgB,oC,kBCApFD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,IAAM,+B,oBCA7ED,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,aAAe,qC,sKCMlBC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,K,gBCWxBI,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACtB,OACI,0BAASC,UAAWC,IAAOI,QAA3B,UACI,mBAAGL,UAAWC,IAAOG,MAArB,SAA6BA,IAC5BL,M,iBCIEO,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,mBAAGP,UAAWC,IAAOO,aAArB,SAAoCD,K,gBCwBhCE,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,qBAAKX,UAAWC,IAAOW,aAAvB,SACKF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBACIC,KAAK,SAELC,KAAMF,EACNG,QAASN,EACTX,UAAWC,IAAOiB,IALtB,SAOKJ,GALIA,S,gBCNnBK,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,8BACI,qBAAIxB,UAAWyB,IAAMC,cAArB,UACI,qBAAI1B,UAAWyB,IAAME,cAArB,mBAA2CP,KAC3C,qBAAIpB,UAAWyB,IAAME,cAArB,sBAA8CN,KAC9C,qBAAIrB,UAAWyB,IAAME,cAArB,kBAA0CL,KAC1C,qBAAItB,UAAWyB,IAAME,cAArB,oBAA4CJ,KAC5C,qBAAIvB,UAAWyB,IAAME,cAArB,+BACuBH,EADvB,aAOZL,EAAWS,aAAe,CACtBR,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWTL,QCkCAU,E,4MA5DXC,MAAQ,CACJV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTS,qBAAuB,SAAAC,GACnB,IAAQhB,EAASgB,EAAMC,cAAfjB,KAER,EAAKkB,UAAS,SAAAC,GAAS,sBAClBnB,EAAOmB,EAAUnB,GAAQ,O,EAIlCoB,mBAAqB,WACjB,MAA+B,EAAKN,MAGpC,OAHA,EAAQV,KAAR,EAAcC,QAAd,EAAuBC,K,EAM3Be,gCAAkC,WAC9B,IAAIC,EAAgB,EAAKF,qBACrBG,EAAsC,IAAlB,EAAKT,MAAMV,KAAckB,EAEjD,OAAyB,IAAlBA,EAAsBE,KAAKC,MAAMF,GAAoB,G,4CAGhE,WACI,MAA+BG,KAAKZ,MAA5BV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQmB,KAAKN,qBACbZ,EAAqBkB,KAAKL,kCAEhC,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CAASjC,MAAM,wBAAf,SACI,cAAC,EAAD,CACIM,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB+B,KAAKX,yBAG9B,cAAC,EAAD,CAAS3B,MAAM,aAAf,SACKmB,EACG,cAAC,EAAD,CACIH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGxB,cAAC,EAAD,CAAcjB,QAAQ,+B,GApD5BoC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d1b3cdd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__3DffE\",\"statisticItem\":\"Statistics_statisticItem__tq9bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Afn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__1l8wz\",\"btn\":\"FeedbackOptions_btn__1_gFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2R_sJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1qtEJ\"};","import styles from './Container.module.css'\r\n\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={styles.container}>{children}</div>\r\n)\r\n\r\nexport default Container;","import PropTypes from 'prop-types'\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section className={styles.section}>\r\n            <p className={styles.title}>{title}</p>\r\n            {children}\r\n        </section>)\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types'\r\nimport styles from './Notification.module.css'\r\n\r\nconst Notification = ({ message }) => {\r\n    return <p className={styles.notification}>{message}</p>\r\n};\r\n\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;","import PropTypes from 'prop-types'\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div className={styles.feedbackList}>\r\n            {options.map(option => (\r\n                <button\r\n                    type=\"button\"\r\n                    key={option}\r\n                    name={option}\r\n                    onClick={onLeaveFeedback}\r\n                    className={styles.btn}\r\n                >\r\n                    {option}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","\r\nimport PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div>\r\n        <ul className={style.statisticList}>\r\n            <li className={style.statisticItem}>Good: {good}</li>\r\n            <li className={style.statisticItem}>Neutral: {neutral}</li>\r\n            <li className={style.statisticItem}>Bad: {bad}</li>\r\n            <li className={style.statisticItem}>Total: {total}</li>\r\n            <li className={style.statisticItem}>\r\n                Positive Feedback:{positivePercentage}%\r\n      </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;","import React, { Component } from 'react'\r\nimport Container from './components/Container/Container'\r\nimport Section from './components/Section/Section'\r\nimport Notification from './components/Notification/Notification'\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\r\nimport Statistics from './components/Statistics/Statistics'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    };\r\n\r\n    countFeedbackHandler = event => {\r\n        const { name } = event.currentTarget;\r\n\r\n        this.setState(prevState => ({\r\n            [name]: prevState[name] + 1,\r\n        }));\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        const total = good + neutral + bad;\r\n\r\n        return total;\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        let totalFeedback = this.countTotalFeedback();\r\n        let positiveFeedback = (this.state.good * 100) / totalFeedback;\r\n\r\n        return totalFeedback !== 0 ? Math.round(positiveFeedback) : 0;\r\n    };\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        const total = this.countTotalFeedback();\r\n        const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n        return (\r\n            <Container>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions\r\n                        options={['good', 'neutral', 'bad']}\r\n                        onLeaveFeedback={this.countFeedbackHandler}\r\n                    />\r\n                </Section>\r\n                <Section title=\"Statistics\">\r\n                    {total ? (\r\n                        <Statistics\r\n                            good={good}\r\n                            neutral={neutral}\r\n                            bad={bad}\r\n                            total={total}\r\n                            positivePercentage={positivePercentage}\r\n                        />\r\n                    ) : (\r\n                        <Notification message=\"No feedback given\"></Notification>\r\n                    )}\r\n                </Section>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'modern-normalize/modern-normalize.css';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}